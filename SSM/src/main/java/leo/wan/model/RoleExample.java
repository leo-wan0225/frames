package leo.wan.model;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;

public class RoleExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table role
     *
     * @mbggenerated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table role
     *
     * @mbggenerated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table role
     *
     * @mbggenerated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table role
     *
     * @mbggenerated
     */
    public RoleExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table role
     *
     * @mbggenerated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table role
     *
     * @mbggenerated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table role
     *
     * @mbggenerated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table role
     *
     * @mbggenerated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table role
     *
     * @mbggenerated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table role
     *
     * @mbggenerated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table role
     *
     * @mbggenerated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table role
     *
     * @mbggenerated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table role
     *
     * @mbggenerated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table role
     *
     * @mbggenerated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table role
     *
     * @mbggenerated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Integer value) {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Integer value) {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Integer value) {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Integer value) {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Integer value) {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Integer> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Integer> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Integer value1, Integer value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Integer value1, Integer value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andRoleNameIsNull() {
            addCriterion("role_name is null");
            return (Criteria) this;
        }

        public Criteria andRoleNameIsNotNull() {
            addCriterion("role_name is not null");
            return (Criteria) this;
        }

        public Criteria andRoleNameEqualTo(String value) {
            addCriterion("role_name =", value, "roleName");
            return (Criteria) this;
        }

        public Criteria andRoleNameNotEqualTo(String value) {
            addCriterion("role_name <>", value, "roleName");
            return (Criteria) this;
        }

        public Criteria andRoleNameGreaterThan(String value) {
            addCriterion("role_name >", value, "roleName");
            return (Criteria) this;
        }

        public Criteria andRoleNameGreaterThanOrEqualTo(String value) {
            addCriterion("role_name >=", value, "roleName");
            return (Criteria) this;
        }

        public Criteria andRoleNameLessThan(String value) {
            addCriterion("role_name <", value, "roleName");
            return (Criteria) this;
        }

        public Criteria andRoleNameLessThanOrEqualTo(String value) {
            addCriterion("role_name <=", value, "roleName");
            return (Criteria) this;
        }

        public Criteria andRoleNameLike(String value) {
            addCriterion("role_name like", value, "roleName");
            return (Criteria) this;
        }

        public Criteria andRoleNameNotLike(String value) {
            addCriterion("role_name not like", value, "roleName");
            return (Criteria) this;
        }

        public Criteria andRoleNameIn(List<String> values) {
            addCriterion("role_name in", values, "roleName");
            return (Criteria) this;
        }

        public Criteria andRoleNameNotIn(List<String> values) {
            addCriterion("role_name not in", values, "roleName");
            return (Criteria) this;
        }

        public Criteria andRoleNameBetween(String value1, String value2) {
            addCriterion("role_name between", value1, value2, "roleName");
            return (Criteria) this;
        }

        public Criteria andRoleNameNotBetween(String value1, String value2) {
            addCriterion("role_name not between", value1, value2, "roleName");
            return (Criteria) this;
        }

        public Criteria andRolelevelIsNull() {
            addCriterion("roleLevel is null");
            return (Criteria) this;
        }

        public Criteria andRolelevelIsNotNull() {
            addCriterion("roleLevel is not null");
            return (Criteria) this;
        }

        public Criteria andRolelevelEqualTo(String value) {
            addCriterion("roleLevel =", value, "rolelevel");
            return (Criteria) this;
        }

        public Criteria andRolelevelNotEqualTo(String value) {
            addCriterion("roleLevel <>", value, "rolelevel");
            return (Criteria) this;
        }

        public Criteria andRolelevelGreaterThan(String value) {
            addCriterion("roleLevel >", value, "rolelevel");
            return (Criteria) this;
        }

        public Criteria andRolelevelGreaterThanOrEqualTo(String value) {
            addCriterion("roleLevel >=", value, "rolelevel");
            return (Criteria) this;
        }

        public Criteria andRolelevelLessThan(String value) {
            addCriterion("roleLevel <", value, "rolelevel");
            return (Criteria) this;
        }

        public Criteria andRolelevelLessThanOrEqualTo(String value) {
            addCriterion("roleLevel <=", value, "rolelevel");
            return (Criteria) this;
        }

        public Criteria andRolelevelLike(String value) {
            addCriterion("roleLevel like", value, "rolelevel");
            return (Criteria) this;
        }

        public Criteria andRolelevelNotLike(String value) {
            addCriterion("roleLevel not like", value, "rolelevel");
            return (Criteria) this;
        }

        public Criteria andRolelevelIn(List<String> values) {
            addCriterion("roleLevel in", values, "rolelevel");
            return (Criteria) this;
        }

        public Criteria andRolelevelNotIn(List<String> values) {
            addCriterion("roleLevel not in", values, "rolelevel");
            return (Criteria) this;
        }

        public Criteria andRolelevelBetween(String value1, String value2) {
            addCriterion("roleLevel between", value1, value2, "rolelevel");
            return (Criteria) this;
        }

        public Criteria andRolelevelNotBetween(String value1, String value2) {
            addCriterion("roleLevel not between", value1, value2, "rolelevel");
            return (Criteria) this;
        }

        public Criteria andIsusedIsNull() {
            addCriterion("isUsed is null");
            return (Criteria) this;
        }

        public Criteria andIsusedIsNotNull() {
            addCriterion("isUsed is not null");
            return (Criteria) this;
        }

        public Criteria andIsusedEqualTo(Byte value) {
            addCriterion("isUsed =", value, "isused");
            return (Criteria) this;
        }

        public Criteria andIsusedNotEqualTo(Byte value) {
            addCriterion("isUsed <>", value, "isused");
            return (Criteria) this;
        }

        public Criteria andIsusedGreaterThan(Byte value) {
            addCriterion("isUsed >", value, "isused");
            return (Criteria) this;
        }

        public Criteria andIsusedGreaterThanOrEqualTo(Byte value) {
            addCriterion("isUsed >=", value, "isused");
            return (Criteria) this;
        }

        public Criteria andIsusedLessThan(Byte value) {
            addCriterion("isUsed <", value, "isused");
            return (Criteria) this;
        }

        public Criteria andIsusedLessThanOrEqualTo(Byte value) {
            addCriterion("isUsed <=", value, "isused");
            return (Criteria) this;
        }

        public Criteria andIsusedIn(List<Byte> values) {
            addCriterion("isUsed in", values, "isused");
            return (Criteria) this;
        }

        public Criteria andIsusedNotIn(List<Byte> values) {
            addCriterion("isUsed not in", values, "isused");
            return (Criteria) this;
        }

        public Criteria andIsusedBetween(Byte value1, Byte value2) {
            addCriterion("isUsed between", value1, value2, "isused");
            return (Criteria) this;
        }

        public Criteria andIsusedNotBetween(Byte value1, Byte value2) {
            addCriterion("isUsed not between", value1, value2, "isused");
            return (Criteria) this;
        }

        public Criteria andAmountIsNull() {
            addCriterion("amount is null");
            return (Criteria) this;
        }

        public Criteria andAmountIsNotNull() {
            addCriterion("amount is not null");
            return (Criteria) this;
        }

        public Criteria andAmountEqualTo(Double value) {
            addCriterion("amount =", value, "amount");
            return (Criteria) this;
        }

        public Criteria andAmountNotEqualTo(Double value) {
            addCriterion("amount <>", value, "amount");
            return (Criteria) this;
        }

        public Criteria andAmountGreaterThan(Double value) {
            addCriterion("amount >", value, "amount");
            return (Criteria) this;
        }

        public Criteria andAmountGreaterThanOrEqualTo(Double value) {
            addCriterion("amount >=", value, "amount");
            return (Criteria) this;
        }

        public Criteria andAmountLessThan(Double value) {
            addCriterion("amount <", value, "amount");
            return (Criteria) this;
        }

        public Criteria andAmountLessThanOrEqualTo(Double value) {
            addCriterion("amount <=", value, "amount");
            return (Criteria) this;
        }

        public Criteria andAmountIn(List<Double> values) {
            addCriterion("amount in", values, "amount");
            return (Criteria) this;
        }

        public Criteria andAmountNotIn(List<Double> values) {
            addCriterion("amount not in", values, "amount");
            return (Criteria) this;
        }

        public Criteria andAmountBetween(Double value1, Double value2) {
            addCriterion("amount between", value1, value2, "amount");
            return (Criteria) this;
        }

        public Criteria andAmountNotBetween(Double value1, Double value2) {
            addCriterion("amount not between", value1, value2, "amount");
            return (Criteria) this;
        }

        public Criteria andIntTotalIsNull() {
            addCriterion("int_Total is null");
            return (Criteria) this;
        }

        public Criteria andIntTotalIsNotNull() {
            addCriterion("int_Total is not null");
            return (Criteria) this;
        }

        public Criteria andIntTotalEqualTo(Integer value) {
            addCriterion("int_Total =", value, "intTotal");
            return (Criteria) this;
        }

        public Criteria andIntTotalNotEqualTo(Integer value) {
            addCriterion("int_Total <>", value, "intTotal");
            return (Criteria) this;
        }

        public Criteria andIntTotalGreaterThan(Integer value) {
            addCriterion("int_Total >", value, "intTotal");
            return (Criteria) this;
        }

        public Criteria andIntTotalGreaterThanOrEqualTo(Integer value) {
            addCriterion("int_Total >=", value, "intTotal");
            return (Criteria) this;
        }

        public Criteria andIntTotalLessThan(Integer value) {
            addCriterion("int_Total <", value, "intTotal");
            return (Criteria) this;
        }

        public Criteria andIntTotalLessThanOrEqualTo(Integer value) {
            addCriterion("int_Total <=", value, "intTotal");
            return (Criteria) this;
        }

        public Criteria andIntTotalIn(List<Integer> values) {
            addCriterion("int_Total in", values, "intTotal");
            return (Criteria) this;
        }

        public Criteria andIntTotalNotIn(List<Integer> values) {
            addCriterion("int_Total not in", values, "intTotal");
            return (Criteria) this;
        }

        public Criteria andIntTotalBetween(Integer value1, Integer value2) {
            addCriterion("int_Total between", value1, value2, "intTotal");
            return (Criteria) this;
        }

        public Criteria andIntTotalNotBetween(Integer value1, Integer value2) {
            addCriterion("int_Total not between", value1, value2, "intTotal");
            return (Criteria) this;
        }

        public Criteria andDecemilToalIsNull() {
            addCriterion("decemil_Toal is null");
            return (Criteria) this;
        }

        public Criteria andDecemilToalIsNotNull() {
            addCriterion("decemil_Toal is not null");
            return (Criteria) this;
        }

        public Criteria andDecemilToalEqualTo(BigDecimal value) {
            addCriterion("decemil_Toal =", value, "decemilToal");
            return (Criteria) this;
        }

        public Criteria andDecemilToalNotEqualTo(BigDecimal value) {
            addCriterion("decemil_Toal <>", value, "decemilToal");
            return (Criteria) this;
        }

        public Criteria andDecemilToalGreaterThan(BigDecimal value) {
            addCriterion("decemil_Toal >", value, "decemilToal");
            return (Criteria) this;
        }

        public Criteria andDecemilToalGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("decemil_Toal >=", value, "decemilToal");
            return (Criteria) this;
        }

        public Criteria andDecemilToalLessThan(BigDecimal value) {
            addCriterion("decemil_Toal <", value, "decemilToal");
            return (Criteria) this;
        }

        public Criteria andDecemilToalLessThanOrEqualTo(BigDecimal value) {
            addCriterion("decemil_Toal <=", value, "decemilToal");
            return (Criteria) this;
        }

        public Criteria andDecemilToalIn(List<BigDecimal> values) {
            addCriterion("decemil_Toal in", values, "decemilToal");
            return (Criteria) this;
        }

        public Criteria andDecemilToalNotIn(List<BigDecimal> values) {
            addCriterion("decemil_Toal not in", values, "decemilToal");
            return (Criteria) this;
        }

        public Criteria andDecemilToalBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("decemil_Toal between", value1, value2, "decemilToal");
            return (Criteria) this;
        }

        public Criteria andDecemilToalNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("decemil_Toal not between", value1, value2, "decemilToal");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table role
     *
     * @mbggenerated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table role
     *
     * @mbggenerated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}